#
# PIC32MZ target: chipKIT Wi-Fire board
#
# To build the kernel, use:
#   ../../../usr.sbin/config/config WIFIRE.pic32
#   cd ../../compile/WIFIRE.pic32
#   bmake depend
#   bmake
#
machine         "pic32"

cpu             "PIC32MZ"
ident           WIFIRE

# Need to set locally
timezone        8 dst
maxusers        2

# Standard system options
options         SWAPPAGER               # swap pager (anonymous and swap space)
options         VNODEPAGER              # vnode pager (mapped files)
options         DEVPAGER                # device pager (mapped devices)
options         DIAGNOSTIC              # extra kernel debugging checks
#options        DEBUG                   # extra kernel debugging support
#options        KTRACE                  # system call tracing support
options         "NKMEMCLUSTERS=40"      # 4K pages in kernel malloc pool, default 128 pages
                                        # 40 pages is enough for pic32mz
options         "NMBCLUSTERS=16"        # 4K pages in network mbuf pool, default 256/512 pages
options         "CPU_KHZ=200000"        # Oscillator frequency of CPU core
options         "HZ=20"                 # Frequency of clock interrupt

# Console options
options         "CONS_MAJOR=17"         # UART device
options         "CONS_MINOR=3"          # UART4 - chipKIT WiFire board

# Filesystem options
options         FIFO            # POSIX fifo support (in all filesystems)
options         FFS             # fast filesystem with user and group quotas
#options        MFS             # memory-based filesystem
#options        NFS             # Sun NFS-compatible filesystem
options         UNION           # Union filesystem
options         KERNFS          # kernel data-structure filesystem
options         FDESC           # user file descriptor filesystem
options         PROCFS          # /proc filesystem
#options        UMAPFS          # uid/gid remapping filesystem
#options        NULLFS          # null layer filesystem
#options        LFS             # Log-based filesystem (still experimental)
#options        PORTAL          # portal filesystem (still experimental)

# Networking options
options         INET            # Internet protocols
#options        GATEWAY         # IP packet forwarding
#options        MULTICAST       # Multicast support
#options        MROUTING        # Multicast routing support

config          vmunix  root on major0 minor1
                        swap on major0 minor2
                        dumps on major0 minor2

device          uart1   flags 0x4e4f    # pins rx=RD14, tx=RD15 - logical 39/40
device          uart4   flags 0x6268    # pins rx=RF2,  tx=RF8  - serial-to-USB converter

controller      spi1    flags 0x6131    # pins sdi=RF1,  sdo=RC1  - logical 36/35/5
controller      spi2    flags 0x604b    # pins sdi=RF0,  sdo=RD11 - logical 12/11/13
controller      spi3    flags 0x2a34    # pins sdi=RB10, sdo=RC4  - SD card
controller      spi4    flags 0x6570    # pins sdi=RF5,  sdo=RG0  - Wi-Fi interface

disk            sd0     at spi3 drive 0 flags 0x33      # select pin RC3
#disk           sd1     at spi3 drive 1 flags 0x26      # select pin RB6

# Wi-Fi controller, pins hibernate=RG1, reset=RF4, irq=RA15, select=RD9
#device         mrf0    at spi4 flags 0x71641f49

pseudo-device   pty             4       # pseudo ptys
pseudo-device   bpfilter        1       # packet filter ports
pseudo-device   loop
pseudo-device   ether
pseudo-device   vn                      # block/character interface to a vnode
